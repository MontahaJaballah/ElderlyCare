package com.elderlycare.medicalequipment.service;

import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import com.elderlycare.medicalequipment.MedicalEquipment;
import com.elderlycare.medicalequipment.MedicalEquipmentRepository;
import com.elderlycare.medicalequipment.exception.ResourceNotFoundException;
import org.springframework.stereotype.Service;

import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.time.format.DateTimeFormatter;

@Service
public class PDFService {

    private final MedicalEquipmentRepository equipmentRepository;

    public PDFService(MedicalEquipmentRepository equipmentRepository) {
        this.equipmentRepository = equipmentRepository;
    }

    public ByteArrayInputStream generateEquipmentPDF(int equipmentId) throws Exception {
        // Fetch equipment from database
        MedicalEquipment equipment = equipmentRepository.findById(equipmentId)
                .orElseThrow(() -> new ResourceNotFoundException("Equipment not found with id: " + equipmentId));

        // Setup document
        ByteArrayOutputStream out = new ByteArrayOutputStream();
        Document document = new Document(PageSize.A4, 50, 50, 50, 50);
        PdfWriter.getInstance(document, out);

        // Add metadata
        document.addAuthor("ElderlyCare");
        document.addCreator("Medical Equipment Management System");
        document.addTitle("Equipment Details - " + equipment.getName());

        document.open();

        // Title
        Font titleFont = new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD);
        Paragraph title = new Paragraph("Equipment Details", titleFont);
        title.setAlignment(Element.ALIGN_CENTER);
        title.setSpacingAfter(20);
        document.add(title);

        // Equipment Information
        Font normalFont = new Font(Font.FontFamily.HELVETICA, 12, Font.NORMAL);
        document.add(new Paragraph("Equipment Name: " + equipment.getName(), normalFont));
        document.add(new Paragraph("Type: " + equipment.getType(), normalFont));
        document.add(new Paragraph("Available: " + (equipment.isAvailable() ? "Yes" : "No"), normalFont));
        
        if (equipment.getManufactureDate() != null) {
            document.add(new Paragraph("Manufacture Date: " + 
                equipment.getManufactureDate().format(DateTimeFormatter.ofPattern("MM/dd/yyyy")), normalFont));
        }
        
        document.add(new Paragraph("\n", normalFont));

        // Maintenance Records
        if (equipment.getMaintenanceRecords() != null && !equipment.getMaintenanceRecords().isEmpty()) {
            Font headerFont = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD);
            Paragraph maintenanceTitle = new Paragraph("Maintenance Records", headerFont);
            maintenanceTitle.setSpacingAfter(10);
            document.add(maintenanceTitle);

            PdfPTable maintenanceTable = new PdfPTable(3); // 3 columns
            maintenanceTable.setWidthPercentage(100);
            maintenanceTable.setSpacingBefore(10f);
            maintenanceTable.setSpacingAfter(10f);

            // Set column widths
            float[] columnWidths = {1f, 3f, 2f};
            maintenanceTable.setWidths(columnWidths);

            // Add table headers
            addMaintenanceTableHeader(maintenanceTable);

            // Add maintenance records
            equipment.getMaintenanceRecords().forEach(record -> {
                maintenanceTable.addCell(String.valueOf(record.getId())); // Record ID
                maintenanceTable.addCell(record.getDescription()); // Description
                maintenanceTable.addCell(record.getMaintenanceDate().format(DateTimeFormatter.ofPattern("MM/dd/yyyy"))); // Date
            });

            document.add(maintenanceTable);
        }

        // Footer
        Paragraph footer = new Paragraph("\n\nGenerated by ElderlyCare Medical Equipment System", 
            new Font(Font.FontFamily.HELVETICA, 10, Font.ITALIC));
        footer.setAlignment(Element.ALIGN_CENTER);
        document.add(footer);

        document.close();
        return new ByteArrayInputStream(out.toByteArray());
    }

    private void addMaintenanceTableHeader(PdfPTable table) {
        Font headerFont = new Font(Font.FontFamily.HELVETICA, 12, Font.BOLD, BaseColor.WHITE);

        PdfPCell cell = new PdfPCell();
        cell.setBackgroundColor(BaseColor.DARK_GRAY);
        cell.setPadding(5);

        cell.setPhrase(new Phrase("Record ID", headerFont));
        table.addCell(cell);

        cell.setPhrase(new Phrase("Description", headerFont));
        table.addCell(cell);

        cell.setPhrase(new Phrase("Date", headerFont));
        table.addCell(cell);
    }
}
